{"version":3,"sources":["components/widgets/_variables.js","components/widgets/column.js","components/useFunctions/useFunctions.js","components/bubble.js","components/widgets/columns.js","components/selection.js","components/insertion.js","components/radix.js","components/layout.js","App.js","serviceWorker.js","index.js"],"names":["colorArray","getColor","height","color","id","current","width","style","backgroundColor","className","useFunctions","getRandomInt","min","max","Math","ceil","floor","random","getRandomArray","n","arr","Array","fill","forEach","item","index","calcWidth","screenWidth","numberOfCols","x","calcHeight","screenHeight","timer","currentColumn","swapped","window","innerWidth","innerHeight","addEventListener","location","reload","props","useState","sort","speed","setspeed","numberOfColumns","setnumberOfColumns","columnsArray","setcolumnsArray","start","setstart","getNewArray","handleSpeedChange","s","handleColumnsChange","swap","left","right","newArray","leftItem","rightItem","length","push","console","log","clearTimeout","setTimeout","onClick","LinearProgress","map","c","key","type","disabled","role","display","cols","e","preventDefault","currentMin","params","y","columns","stop","currentCompare","currentColumnValue","digit","getDigit","num","i","abs","pow","maxDigit","log10","digitBins","from","j","useStyles","makeStyles","root","Layout","history","useHistory","classes","React","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","App","path","Boolean","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c9a9e714.chunk.js","sourcesContent":["\nconst colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n\nexport {colorArray}","import React from \"react\";\nimport { colorArray } from \"./_variables\";\n// import useFunctions from \"../useFunctions/useFunctions\";\n\nconst getColor = height => {\n  let color;\n  // const answer = x > 10 ? \"greater than 10\" : \"less than 10\";\n\n  if(height <= 500) color = colorArray[4]\n  if(height <= 450) color = colorArray[10]\n  if(height <= 350) color = colorArray[8]\n  if(height <= 250) color = colorArray[7]\n  if(height <= 150) color = colorArray[12]\n  if(height <= 80) color = colorArray[5]\n\n  return color;\n};\n\nexport default ({ height, id, current, width }) => {\n  return (\n    <div\n      style={{\n        height: height,\n        backgroundColor: getColor(height),\n        width: width\n      }}\n      className = {current === true ? 'column current-column' : 'column shadow-sm'}\n      id={`column-${id}`}\n    ></div>\n  );\n};\n","export default function useFunctions() {\n  return {\n    getRandomInt: (min, max) => {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n    },\n    getRandomArray: (max, min, n) => {\n      let arr = Array(n).fill(0);\n      arr.forEach((item, index) => {\n        arr[index] = Math.floor(Math.random() * (max - min)) + min;\n      });\n      return arr;\n    },\n    calcWidth: (screenWidth, numberOfCols) => {\n      let x = screenWidth / numberOfCols;\n      if (x > 30) {\n        return 20;\n      } else {\n        return x - 10;\n      }\n    },\n    calcHeight: (screenHeight)=>{\n      let x = screenHeight * 0.50\n\n      if(x > 400){\n        return 400\n      }\n      else{\n        return x\n      }\n    }\n  };\n}\n","import React, { useState } from \"react\";\nimport Column from \"./widgets/column\";\nimport useFunctions from \"./useFunctions/useFunctions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ViewWeekIcon from \"@material-ui/icons/ViewWeek\";\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FastRewindIcon from \"@material-ui/icons/FastRewind\";\nlet currentColumn = 0;\nlet swapped = [];\nconst { getRandomArray, calcWidth, calcHeight } = useFunctions();\n\nlet timer;\n// for number of 20 items\nlet screenWidth = window.innerWidth;\nlet screenHeight = window.innerHeight;\nlet numberOfCols = 20;\n\nwindow.addEventListener(\"resize\", function() {\n  window.location.reload();\n});\nexport default props => {\n  const [sort, setsort] = useState(props.sort);\n  const [speed, setspeed] = useState(50);\n  const [numberOfColumns, setnumberOfColumns] = useState(numberOfCols);\n  let width = calcWidth(screenWidth, numberOfColumns);\n  let max = calcHeight(screenHeight);\n  const [columnsArray, setcolumnsArray] = useState(\n    getRandomArray(max, 1, numberOfColumns)\n  );\n  const [start, setstart] = useState(false);\n\n  const getNewArray = () => {\n    setcolumnsArray(getRandomArray(max, 1, numberOfColumns));\n    currentColumn = 0\n    swapped = [];\n    setstart(false)\n  };\n  const renderCols = () => {\n    return columnsArray.map((c, index) => {\n      let current =\n        index === currentColumn || index === currentColumn + 1 ? true : false;\n      return (\n        <Column\n          key={index}\n          id={index}\n          height={c}\n          width={width}\n          current={current}\n        />\n      );\n    });\n  };\n  const actionCenter = () => {\n    return (\n      <div className=\"d-flex justify-content-center bg-warning align-items-baseline\">\n        <button\n          onClick={() => {\n            handleColumnsChange(10);\n          }}\n          className=\"btn btn-sm btn-success m-2\"\n          type=\"button\"\n          disabled={start}\n        >\n          +\n          <ViewWeekIcon />\n        </button>\n        {numberOfColumns}\n        <button\n          onClick={() => {\n            handleColumnsChange(-10);\n          }}\n          className=\"btn btn-sm btn-danger m-2\"\n          type=\"button\"\n          disabled={start}\n        >\n          -\n          <ViewWeekIcon />\n        </button>\n        <button\n          onClick={() => {\n            handleSpeedChange(\"+\");\n          }}\n          className=\"btn btn-sm btn-success m-2\"\n          type=\"button\"\n          disabled={start}\n        >\n          <FastForwardIcon />\n          Speed Up\n        </button>\n        {speed}\n        <button\n          onClick={() => {\n            handleSpeedChange(\"-\");\n          }}\n          className=\"btn btn-sm btn-danger m-2\"\n          type=\"button\"\n          disabled={start}\n        >\n          <FastRewindIcon />\n          Slow Down\n        </button>\n        <span>Current delay: {speed}</span>\n      </div>\n    );\n  };\n  const handleSpeedChange = s => {\n    if (s === \"+\") {\n      if (speed > 10) {\n        setspeed(speed - 10);\n      }\n    }\n    if (s === \"-\") {\n      if (speed > -1) {\n        setspeed(speed + 50);\n      }\n    }\n  };\n  const handleColumnsChange = n => {\n    if (start) return false;\n    if (numberOfColumns + n > 10 && numberOfColumns + n < 200) {\n      setnumberOfColumns(numberOfColumns + n);\n      getNewArray();\n    }\n  };\n\n  const swap = (left, right) => {\n    let newArray = [...columnsArray];\n    if (columnsArray[left] > columnsArray[left + 1]) {\n      let leftItem = columnsArray[left];\n      let rightItem = columnsArray[left + 1];\n      columnsArray[left] = rightItem;\n      columnsArray[right] = leftItem;\n      newArray = [...columnsArray];\n    }\n    if (currentColumn >= columnsArray.length - swapped.length) {\n      currentColumn = 0;\n      swapped.push(right);\n      console.log(\"added to swapped\", right);\n    } else {\n      currentColumn++;\n    }\n    setcolumnsArray(newArray);\n    if (swapped.length === columnsArray.length - 1) {\n      currentColumn = -2;\n      setstart(false)\n      stop();\n    }\n  };\n\n  const bubbleSort = () => {\n    swap(currentColumn, currentColumn + 1);\n  };\n\n  function startSort() {\n    if (start) {\n      timer = setTimeout(bubbleSort, speed);\n    }\n  }\n\n  function stop() {\n    setstart(false);\n    clearTimeout(timer);\n  }\n  startSort();\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"bg-light p-1\">\n        <h1>Bubble Sort </h1>\n      </div>\n      {/* Action center */}\n      <div className=\"d-flex justify-content-between mt-2\">\n        <button onClick={getNewArray} className=\"btn btn-warning\">\n          Create New\n        </button>\n        <button\n          onClick={() => {\n            setstart(!start);\n          }}\n          className=\"btn btn-success\"\n        >\n          {start ? <span>Pause Sort</span> : <span>Start Sort</span>}\n        </button>\n      </div>\n      <div>{start && <LinearProgress />}</div>\n      <div className=\"row shadow columns-container\">\n        <div>{renderCols()}</div>\n      </div>\n      {actionCenter()}\n      {/* Information box */}\n      <div className=\"mt-3\">\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <div className=\"alert alert-primary\" role=\"alert\">\n              It will take {(numberOfColumns * (numberOfColumns - 1)) / 2} moves\n              to sort this array\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"alert alert-success\" role=\"alert\">\n              Number of Columns : {numberOfColumns}\n            </div>\n          </div>\n        </div>\n        {start && <LinearProgress color='secondary'/>}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport Column from \"./column\";\nimport useFunctions from \"../useFunctions/useFunctions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ViewWeekIcon from \"@material-ui/icons/ViewWeek\";\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\nimport FastRewindIcon from \"@material-ui/icons/FastRewind\";\n\nconst { getRandomArray, calcWidth, calcHeight } = useFunctions();\nlet screenWidth = window.innerWidth;\nlet screenHeight = window.innerHeight;\nlet numberOfCols = 20;\n\nwindow.addEventListener(\"resize\", function() {\n  window.location.reload();\n});\nexport default props => {\n  const [speed, setspeed] = useState(500);\n  const [numberOfColumns, setnumberOfColumns] = useState(numberOfCols);\n  let width = calcWidth(screenWidth, numberOfColumns);\n  let max = calcHeight(screenHeight);\n  const [columnsArray, setcolumnsArray] = useState(\n    getRandomArray(max, 1, numberOfColumns)\n  );\n  const [start, setstart] = useState(false);\n\n  const getNewArray = () => {\n    setcolumnsArray(getRandomArray(max, 1, numberOfColumns));\n  };\n\n  const actionCenter = () => {\n    return (\n      <div className=\"d-flex justify-content-center bg-warning align-items-baseline\">\n        <button\n          onClick={(e) => {\n            e.preventDefault()\n            handleColumnsChange(10);\n            return false\n          }}\n          className=\"btn btn-sm btn-success m-2\"\n          type=\"button\"\n          disabled={start}\n        >\n          +\n          <ViewWeekIcon />\n        </button>\n        {numberOfColumns}\n        <button\n          onClick={() => {\n            handleColumnsChange(-10);\n          }}\n          className=\"btn btn-sm btn-danger m-2\"\n          type=\"button\"\n          disabled={start}\n        >\n          -\n          <ViewWeekIcon />\n        </button>\n        <button\n          onClick={() => {\n            handleSpeedChange(\"+\");\n          }}\n          className=\"btn btn-sm btn-success m-2\"\n          type=\"button\"\n          disabled={start}\n        >\n          <FastForwardIcon />\n          Speed Up\n        </button>\n        {speed}\n        <button\n          onClick={() => {\n            handleSpeedChange(\"-\");\n          }}\n          className=\"btn btn-sm btn-danger m-2\"\n          type=\"button\"\n          disabled={start}\n        >\n          <FastRewindIcon />\n          Slow Down\n        </button>\n        <span>Current delay: {speed}</span>\n      </div>\n    );\n  };\n  const handleSpeedChange = s => {\n    if (s === \"+\") {\n      if (speed > 10) {\n        setspeed(speed - 10);\n      }\n      if(speed > 100){\n        setspeed(speed - 50)\n      }\n    }\n    if (s === \"-\") {\n      if (speed > -1) {\n        setspeed(speed + 50);\n      }\n    }\n  };\n  const handleColumnsChange = n => {\n    if (!start){      \n      if (numberOfColumns + n > 10 && numberOfColumns + n < 200) {\n        setnumberOfColumns(numberOfColumns + n);\n        getNewArray();\n      }\n    };\n  }\n\n  const display = (cols) => {\n    return (\n      <div className=\"container-fluid\">\n        {/* Action center */}\n        <div className=\"d-flex justify-content-between mt-2\">\n          <button onClick={getNewArray} className=\"btn btn-warning\">\n            Create New\n          </button>\n          <button\n            onClick={() => {\n              setstart(!start);\n            }}\n            className=\"btn btn-success\"\n          >\n            {start ? <span>Pause Sort</span> : <span>Start Sort</span>}\n          </button>\n        </div>\n        {/* <div>{start && <LinearProgress />}</div> */}\n        <div className=\"row shadow columns-container\">\n          <div>{cols}</div>\n        </div>\n        {actionCenter()}\n        {/* Information box */}\n        <div className=\"mt-3\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"alert alert-primary\" role=\"alert\">\n                It will take {(numberOfColumns * (numberOfColumns - 1)) / 2}{\" \"}\n                moves to sort this array\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"alert alert-success\" role=\"alert\">\n                Number of Columns : {numberOfColumns}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return {\n    display: display,\n    setcolumnsArray: setcolumnsArray,\n    columnsArray: columnsArray,\n    start: start,\n    setstart:setstart,\n    speed: speed,\n    width: width\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport Column from \"./widgets/column\";\nimport columns from \"./widgets/columns\";\nlet timer;\nlet currentColumn = 0,\n  currentMin = 0;\nexport default params => {\n\n  const {\n    display,\n    setcolumnsArray,\n    columnsArray,\n    start,\n    setstart,\n    speed,\n    width\n  } = columns();\n  const renderCols = (x, y) => {\n    return columnsArray.map((c, index) => {\n      let current = index === x || index === y ? true : false;\n      return (\n        <Column\n          key={index}\n          id={index}\n          height={c}\n          width={width}\n          current={current}\n        />\n      );\n    });\n  };\n  const swap = (current, min) => {\n    let x = columnsArray[current];\n    columnsArray[current] = columnsArray[min];\n    columnsArray[min] = x;\n  };\n\n  function startSort() {\n    if (start) {\n      timer = setTimeout(selectionSort, speed);\n    } else {\n      stop();\n    }\n  }\n  function stop() {\n    clearTimeout(timer);\n    start && setstart(false)\n  }\n\n  const selectionSort = () => {\n    if (columnsArray[currentMin] > columnsArray[currentColumn]) {\n      swap(currentMin, currentColumn);\n    }\n    currentColumn++;\n    if (currentColumn === columnsArray.length) {\n      currentColumn = currentMin + 1;\n      currentMin++;\n    }\n\n    setcolumnsArray([...columnsArray]);\n    if (currentMin === columnsArray.length) {\n      stop();\n      return true;\n    }\n    \n  };\n\n  startSort();\n  return (\n    <div>\n      <div className=\"bg-light p-1\">\n        <h1>Selection Sort</h1>\n      </div>\n      {display(renderCols(currentMin, currentColumn))}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Column from \"./widgets/column\";\nimport columns from \"./widgets/columns\";\nlet timer;\nlet currentColumn = 1;\nlet currentCompare = 0;\nexport default params => {\n\n  const {\n    display,\n    setcolumnsArray,\n    columnsArray,\n    start,\n    setstart,\n    speed,\n    width\n  } = columns();\n  const renderCols = (x, y) => {\n    return columnsArray.map((c, index) => {\n      let current = index === x || index === y ? true : false;\n      return (\n        <Column\n          key={index}\n          id={index}\n          height={c}\n          width={width}\n          current={current}\n        />\n      );\n    });\n  };\n\n  function startSort() {\n    if (start) {\n      timer = setTimeout(insertionSort, speed);\n    } else {\n      stop();\n    }\n  }\n  function stop() {\n    clearTimeout(timer);\n    start && setstart(false)\n  }\n\n  const insertionSort = () => {\n    const currentColumnValue = columnsArray[currentColumn];\n    for (currentCompare = currentColumn - 1; currentCompare >= 0 && columnsArray[currentCompare] > currentColumnValue; currentCompare--) {\n      columnsArray[currentCompare + 1] = columnsArray[currentCompare];\n    }\n    columnsArray[currentCompare + 1] = currentColumnValue; //columnsArray[currentColumn];\n    setcolumnsArray([...columnsArray]);\n    currentColumn += 1;\n    if ( currentColumn === columnsArray.length ) {\n      stop();\n      return true;\n    }\n  }\n\n  startSort();\n  return (\n    <div>\n      <div className=\"bg-light p-1\">\n        <h1>Insertion Sort</h1>\n      </div>\n      {display(renderCols(currentCompare + 1, currentColumn))}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Column from \"./widgets/column\";\nimport columns from \"./widgets/columns\";\nlet timer;\nlet digit = 0;\nexport default params => {\n\n  const {\n    display,\n    setcolumnsArray,\n    columnsArray,\n    start,\n    setstart,\n    speed,\n    width\n  } = columns();\n\n  const renderCols = (x, y) => {\n    return columnsArray.map((c, index) => {\n      let current = index === x || index === y ? true : false;\n      return (\n        <Column\n          key={index}\n          id={index}\n          height={c}\n          width={width}\n          current={current}\n        />\n      );\n    });\n  };\n\n  function getDigit(num, i) {\n    return Math.floor(Math.abs(num) / Math.pow(10, i)) % 10;\n  }\n\n  function digitCount(num) {\n    if ( num === 0 ) return 1;\n    return Math.floor(Math.log10(Math.abs(num))) + 1;\n  }\n\n  function startSort() {\n    if (start) {\n      timer = setTimeout(radixSort, speed);\n    } else {\n      stop();\n    }\n  }\n  function stop() {\n    clearTimeout(timer);\n    start && setstart(false)\n  }\n\n  const maxDigit = digitCount(Math.max(...columnsArray));\n  const radixSort = () => {\n      let digitBins = Array.from({length: 10}, () => [])\n      for (let i = 0; i < columnsArray.length; i++) {\n        digitBins[getDigit(columnsArray[i], digit)].push(columnsArray[i]);\n      }\n      let index = 0;\n\n      for (let i = 0; i < digitBins.length; i++) {\n        for (let j = 0; j < digitBins[i].length; j++) {\n          columnsArray[index] = digitBins[i][j];\n          index++;\n        }\n      }\n\n      console.log(digit);\n      console.log(columnsArray);\n      setcolumnsArray([...columnsArray]);\n      digit++\n      if ( digit === maxDigit ) {\n        stop();\n        return true;\n      }\n  };\n\n\n  startSort();\n  return (\n    <div>\n      <div className=\"bg-light p-1\">\n        <h1>Radix Sort</h1>\n      </div>\n      {display(renderCols())}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\n\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500\n  }\n});\n\nexport default function Layout(props) {\n  const history = useHistory();\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <div className='d-flex justify-content-center'>\n\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          history.push(`/${newValue}`);\n          setValue(newValue);\n        }}\n        showLabels\n        className={classes.root}\n      >\n        <h5 className='mt-2'>Sorting Algorithms</h5>\n        <BottomNavigationAction\n          value=\"bubble\"\n          label=\"Buble\"\n          icon={<BubbleChartIcon />}\n        />\n        <BottomNavigationAction\n          value=\"selection\"\n          label=\"Selection\"\n          icon={<SelectAllIcon />}\n        />\n        <BottomNavigationAction\n          value=\"insertion\"\n          label=\"Insertion\"\n          icon={<SelectAllIcon />}\n        />\n        <BottomNavigationAction\n          value=\"radix\"\n          label=\"Radix\"\n          icon={<SelectAllIcon />}\n        />\n        <BottomNavigationAction label=\"Coming Soon..\" icon={<LocationOnIcon />} />\n      </BottomNavigation>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Bubble from \"./components/bubble\";\nimport Selection from \"./components/selection\";\nimport Insertion from \"./components/insertion\";\nimport Radix from \"./components/radix\"\nimport Columns from './components/widgets/columns'\nimport Layout from \"./components/layout\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nfunction App() {\n  return (\n    <>\n      <Layout />\n      <div>\n        <Switch>\n          <Route path=\"/bubble\">\n            <Bubble sort='bubble'/>\n          </Route>\n          <Route path=\"/selection\">\n            <Selection sort='selection' />\n          </Route>\n          <Route path=\"/insertion\">\n            <Insertion sort='insertion' />\n          </Route>\n          <Route path=\"/radix\">\n            <Radix sort='radix' />\n          </Route>\n          <Route path=\"/\">\n            <Bubble sort='bubble'/>\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/columns.css'\nimport {\n    BrowserRouter as Router,\n    Route\n} from 'react-router-dom'\n\n\nReactDOM.render(<Router basename='/sorting-algorithms'><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}